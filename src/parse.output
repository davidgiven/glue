

Terminals which are not used:

   REV



Grammar
rule 1    file ->		/* empty */
rule 2    file -> file line
rule 3    line -> '\n'
rule 4    line -> NAME IDENT '.' IDENT '\n'
rule 5    line -> TOKENCHARS STRING
rule 6    line -> TOKENID NUMBER '\n'
rule 7    line -> LONGNAME STRING
rule 8    line -> USERNOTES STRING
rule 9    line -> TYPE typeArgs '\n'
rule 10   typeArgs -> typeArg
rule 11   typeArgs -> typeArgs typeArg
rule 12   typeArgs -> typeArgs ',' typeArg
rule 13   typeArg -> PROCESS
rule 14   typeArg -> DRIVER
rule 15   typeArg -> LIBRARY
rule 16   typeArg -> SINGLE
rule 17   typeArg -> APPL
rule 18   typeArg -> USES_COPROC
rule 19   typeArg -> NEEDS_COPROC
rule 20   typeArg -> SYSTEM
rule 21   typeArg -> HAS_GCM
rule 22   typeArg -> C_API
rule 23   typeArg -> DISCARDABLE_DGROUP
rule 24   line -> APPOBJ IDENT '\n'
rule 25   line -> DRIVER IDENT '\n'
rule 26   line -> PLATFORM platformList '\n'
rule 27   line -> SHIP shipList '\n'
rule 28   line -> EXEMPT exemptList '\n'
rule 29   line -> IFDEF IDENT
rule 30   line -> IFNDEF IDENT
rule 31   line -> ELSE
rule 32   line -> ENDIF
rule 33   line -> LIBRARY IDENT noload '\n'
rule 34   platformList -> platformFile
rule 35   platformList -> platformList ',' platformFile
rule 36   platformFile -> IDENT
rule 37   shipList -> shipFile
rule 38   shipList -> shipList ',' shipFile
rule 39   shipFile -> IDENT
rule 40   exemptList -> exemptLib
rule 41   exemptList -> exemptList ',' exemptLib
rule 42   exemptLib -> IDENT
rule 43   noload ->		/* empty */
rule 44   noload -> NOLOAD
rule 45   noload -> NOLOAD FIXED
rule 46   line -> SKIP NUMBER '\n'
rule 47   line -> SKIP UNTIL NUMBER '\n'
rule 48   line -> SKIP UNTIL IDENT '\n'
rule 49   @1 ->		/* empty */
rule 50   line -> EXPORT @1 idList '\n'
rule 51   exportid -> IDENT
rule 52   exportid -> IDENT AS IDENT
rule 53   exportid -> IDENT IFDEF
rule 54   idList -> exportid
rule 55   idList -> idList ',' exportid
rule 56   line -> CLASS IDENT '\n'
rule 57   line -> STACK NUMBER '\n'
rule 58   line -> HEAPSPACE NUMBER '\n'
rule 59   line -> HEAPSPACE KNUMBER '\n'
rule 60   resource -> RESOURCE
rule 61   resource -> RESOURCE IFDEF
rule 62   @2 ->		/* empty */
rule 63   line -> resource IDENT @2 resArgs '\n'
rule 64   line -> NOSORT '\n'
rule 65   line -> error '\n'
rule 66   resArgs ->		/* empty */
rule 67   resArgs -> resArgList
rule 68   resArgList -> resArg
rule 69   resArgList -> resArgList resArg
rule 70   resArgList -> resArgList ',' resArg
rule 71   resArg -> READONLY
rule 72   resArg -> DISCARDABLE
rule 73   resArg -> DISCARDONLY
rule 74   resArg -> SWAPONLY
rule 75   resArg -> SWAPABLE
rule 76   resArg -> NOSWAP
rule 77   resArg -> NODISCARD
rule 78   resArg -> PRELOAD
rule 79   resArg -> FIXED
rule 80   resArg -> CONFORMING
rule 81   resArg -> SHARED
rule 82   resArg -> CODE
rule 83   resArg -> DATA
rule 84   resArg -> LMEM
rule 85   resArg -> UIOBJECT
rule 86   resArg -> OBJECT
rule 87   line -> ENTRY IDENT
rule 88   line -> LOAD nameAndClass AS loadArgs '\n'
rule 89   nameAndClass -> IDENT
rule 90   nameAndClass -> IDENT STRING
rule 91   loadArgs -> IDENT segAttrs
rule 92   loadArgs -> segAttrs
rule 93   segAttrs ->		/* empty */
rule 94   segAttrs -> ALIGNMENT
rule 95   segAttrs -> COMBINE
rule 96   segAttrs -> STRING
rule 97   segAttrs -> ALIGNMENT COMBINE
rule 98   segAttrs -> ALIGNMENT STRING
rule 99   segAttrs -> COMBINE STRING
rule 100  segAttrs -> ALIGNMENT COMBINE STRING
rule 101  line -> PUBLISH IDENT
rule 102  line -> INCMINOR
rule 103  line -> INCMINOR protoMinorList
rule 104  protoMinorList -> protominorid
rule 105  protoMinorList -> protoMinorList ',' protominorid
rule 106  protominorid -> IDENT

Terminals, with rules where they appear

$ (-1)
'\n' (10) 3 4 6 9 24 25 26 27 28 33 46 47 48 50 56 57 58 59 63 64 65
    88
',' (44) 12 35 38 41 55 70 105
'.' (46) 4
error (256) 65
IDENT (258) 4 24 25 29 30 33 36 39 42 48 51 52 53 56 63 87 89 90 91
    101 106
KNUMBER (259) 59
NUMBER (260) 6 46 47 57 58
ALIGNMENT (261) 94 97 98 100
COMBINE (262) 95 97 99 100
STRING (263) 5 7 8 90 96 98 99 100
NAME (264) 4
LONGNAME (265) 7
TOKENCHARS (266) 5
TOKENID (267) 6
TYPE (268) 9
PROCESS (269) 13
DRIVER (270) 14 25
LIBRARY (271) 15 33
SINGLE (272) 16
APPL (273) 17
USES_COPROC (274) 18
NEEDS_COPROC (275) 19
SYSTEM (276) 20
HAS_GCM (277) 21
C_API (278) 22
PLATFORM (279) 26
SHIP (280) 27
EXEMPT (281) 28
DISCARDABLE_DGROUP (282) 23
REV (283)
APPOBJ (284) 24
NOLOAD (285) 44 45
EXPORT (286) 50
AS (287) 52 88
SKIP (288) 46 47 48
UNTIL (289) 47 48
CLASS (290) 56
STACK (291) 57
HEAPSPACE (292) 58 59
RESOURCE (293) 60 61
READONLY (294) 71
DISCARDONLY (295) 73
PRELOAD (296) 78
FIXED (297) 45 79
CONFORMING (298) 80
SHARED (299) 81
CODE (300) 82
DATA (301) 83
LMEM (302) 84
UIOBJECT (303) 85
OBJECT (304) 86
SWAPONLY (305) 74
DISCARDABLE (306) 72
SWAPABLE (307) 75
NOSWAP (308) 76
NODISCARD (309) 77
ENTRY (310) 87
USERNOTES (311) 8
LOAD (312) 88
NOSORT (313) 64
INCMINOR (314) 102 103
PUBLISH (315) 101
IFDEF (316) 29 53 61
ELSE (317) 31
ENDIF (318) 32
IFNDEF (319) 30

Nonterminals, with rules where they appear

file (68)
    on left: 1 2, on right: 2
line (69)
    on left: 3 4 5 6 7 8 9 24 25 26 27 28 29 30 31 32 33 46 47 48 50
    56 57 58 59 63 64 65 87 88 101 102 103, on right: 2
typeArgs (70)
    on left: 10 11 12, on right: 9 11 12
typeArg (71)
    on left: 13 14 15 16 17 18 19 20 21 22 23, on right: 10 11 12
platformList (72)
    on left: 34 35, on right: 26 35
platformFile (73)
    on left: 36, on right: 34 35
shipList (74)
    on left: 37 38, on right: 27 38
shipFile (75)
    on left: 39, on right: 37 38
exemptList (76)
    on left: 40 41, on right: 28 41
exemptLib (77)
    on left: 42, on right: 40 41
noload (78)
    on left: 43 44 45, on right: 33
@1 (79)
    on left: 49, on right: 50
exportid (80)
    on left: 51 52 53, on right: 54 55
idList (81)
    on left: 54 55, on right: 50 55
resource (82)
    on left: 60 61, on right: 63
@2 (83)
    on left: 62, on right: 63
resArgs (84)
    on left: 66 67, on right: 63
resArgList (85)
    on left: 68 69 70, on right: 67 69 70
resArg (86)
    on left: 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86,
    on right: 68 69 70
nameAndClass (87)
    on left: 89 90, on right: 88
loadArgs (88)
    on left: 91 92, on right: 88
segAttrs (89)
    on left: 93 94 95 96 97 98 99 100, on right: 91 92
protoMinorList (90)
    on left: 104 105, on right: 103 105
protominorid (91)
    on left: 106, on right: 104 105


state 0

    $default	reduce using rule 1 (file)

    file	go to state 1



state 1

    file  ->  file . line   (rule 2)

    $   	go to state 164
    error	shift, and go to state 2
    NAME	shift, and go to state 3
    LONGNAME	shift, and go to state 4
    TOKENCHARS	shift, and go to state 5
    TOKENID	shift, and go to state 6
    TYPE	shift, and go to state 7
    DRIVER	shift, and go to state 8
    LIBRARY	shift, and go to state 9
    PLATFORM	shift, and go to state 10
    SHIP	shift, and go to state 11
    EXEMPT	shift, and go to state 12
    APPOBJ	shift, and go to state 13
    EXPORT	shift, and go to state 14
    SKIP	shift, and go to state 15
    CLASS	shift, and go to state 16
    STACK	shift, and go to state 17
    HEAPSPACE	shift, and go to state 18
    RESOURCE	shift, and go to state 19
    ENTRY	shift, and go to state 20
    USERNOTES	shift, and go to state 21
    LOAD	shift, and go to state 22
    NOSORT	shift, and go to state 23
    INCMINOR	shift, and go to state 24
    PUBLISH	shift, and go to state 25
    IFDEF	shift, and go to state 26
    ELSE	shift, and go to state 27
    ENDIF	shift, and go to state 28
    IFNDEF	shift, and go to state 29
    '\n'	shift, and go to state 30

    line	go to state 31
    resource	go to state 32



state 2

    line  ->  error . '\n'   (rule 65)

    '\n'	shift, and go to state 33



state 3

    line  ->  NAME . IDENT '.' IDENT '\n'   (rule 4)

    IDENT	shift, and go to state 34



state 4

    line  ->  LONGNAME . STRING   (rule 7)

    STRING	shift, and go to state 35



state 5

    line  ->  TOKENCHARS . STRING   (rule 5)

    STRING	shift, and go to state 36



state 6

    line  ->  TOKENID . NUMBER '\n'   (rule 6)

    NUMBER	shift, and go to state 37



state 7

    line  ->  TYPE . typeArgs '\n'   (rule 9)

    PROCESS	shift, and go to state 38
    DRIVER	shift, and go to state 39
    LIBRARY	shift, and go to state 40
    SINGLE	shift, and go to state 41
    APPL	shift, and go to state 42
    USES_COPROC	shift, and go to state 43
    NEEDS_COPROC	shift, and go to state 44
    SYSTEM	shift, and go to state 45
    HAS_GCM	shift, and go to state 46
    C_API	shift, and go to state 47
    DISCARDABLE_DGROUP	shift, and go to state 48

    typeArgs	go to state 49
    typeArg	go to state 50



state 8

    line  ->  DRIVER . IDENT '\n'   (rule 25)

    IDENT	shift, and go to state 51



state 9

    line  ->  LIBRARY . IDENT noload '\n'   (rule 33)

    IDENT	shift, and go to state 52



state 10

    line  ->  PLATFORM . platformList '\n'   (rule 26)

    IDENT	shift, and go to state 53

    platformList	go to state 54
    platformFile	go to state 55



state 11

    line  ->  SHIP . shipList '\n'   (rule 27)

    IDENT	shift, and go to state 56

    shipList	go to state 57
    shipFile	go to state 58



state 12

    line  ->  EXEMPT . exemptList '\n'   (rule 28)

    IDENT	shift, and go to state 59

    exemptList	go to state 60
    exemptLib	go to state 61



state 13

    line  ->  APPOBJ . IDENT '\n'   (rule 24)

    IDENT	shift, and go to state 62



state 14

    line  ->  EXPORT . @1 idList '\n'   (rule 50)

    $default	reduce using rule 49 (@1)

    @1  	go to state 63



state 15

    line  ->  SKIP . NUMBER '\n'   (rule 46)
    line  ->  SKIP . UNTIL NUMBER '\n'   (rule 47)
    line  ->  SKIP . UNTIL IDENT '\n'   (rule 48)

    NUMBER	shift, and go to state 64
    UNTIL	shift, and go to state 65



state 16

    line  ->  CLASS . IDENT '\n'   (rule 56)

    IDENT	shift, and go to state 66



state 17

    line  ->  STACK . NUMBER '\n'   (rule 57)

    NUMBER	shift, and go to state 67



state 18

    line  ->  HEAPSPACE . NUMBER '\n'   (rule 58)
    line  ->  HEAPSPACE . KNUMBER '\n'   (rule 59)

    KNUMBER	shift, and go to state 68
    NUMBER	shift, and go to state 69



state 19

    resource  ->  RESOURCE .   (rule 60)
    resource  ->  RESOURCE . IFDEF   (rule 61)

    IFDEF	shift, and go to state 70

    $default	reduce using rule 60 (resource)



state 20

    line  ->  ENTRY . IDENT   (rule 87)

    IDENT	shift, and go to state 71



state 21

    line  ->  USERNOTES . STRING   (rule 8)

    STRING	shift, and go to state 72



state 22

    line  ->  LOAD . nameAndClass AS loadArgs '\n'   (rule 88)

    IDENT	shift, and go to state 73

    nameAndClass	go to state 74



state 23

    line  ->  NOSORT . '\n'   (rule 64)

    '\n'	shift, and go to state 75



state 24

    line  ->  INCMINOR .   (rule 102)
    line  ->  INCMINOR . protoMinorList   (rule 103)

    IDENT	shift, and go to state 76

    $default	reduce using rule 102 (line)

    protoMinorList	go to state 77
    protominorid	go to state 78



state 25

    line  ->  PUBLISH . IDENT   (rule 101)

    IDENT	shift, and go to state 79



state 26

    line  ->  IFDEF . IDENT   (rule 29)

    IDENT	shift, and go to state 80



state 27

    line  ->  ELSE .   (rule 31)

    $default	reduce using rule 31 (line)



state 28

    line  ->  ENDIF .   (rule 32)

    $default	reduce using rule 32 (line)



state 29

    line  ->  IFNDEF . IDENT   (rule 30)

    IDENT	shift, and go to state 81



state 30

    line  ->  '\n' .   (rule 3)

    $default	reduce using rule 3 (line)



state 31

    file  ->  file line .   (rule 2)

    $default	reduce using rule 2 (file)



state 32

    line  ->  resource . IDENT @2 resArgs '\n'   (rule 63)

    IDENT	shift, and go to state 82



state 33

    line  ->  error '\n' .   (rule 65)

    $default	reduce using rule 65 (line)



state 34

    line  ->  NAME IDENT . '.' IDENT '\n'   (rule 4)

    '.' 	shift, and go to state 83



state 35

    line  ->  LONGNAME STRING .   (rule 7)

    $default	reduce using rule 7 (line)



state 36

    line  ->  TOKENCHARS STRING .   (rule 5)

    $default	reduce using rule 5 (line)



state 37

    line  ->  TOKENID NUMBER . '\n'   (rule 6)

    '\n'	shift, and go to state 84



state 38

    typeArg  ->  PROCESS .   (rule 13)

    $default	reduce using rule 13 (typeArg)



state 39

    typeArg  ->  DRIVER .   (rule 14)

    $default	reduce using rule 14 (typeArg)



state 40

    typeArg  ->  LIBRARY .   (rule 15)

    $default	reduce using rule 15 (typeArg)



state 41

    typeArg  ->  SINGLE .   (rule 16)

    $default	reduce using rule 16 (typeArg)



state 42

    typeArg  ->  APPL .   (rule 17)

    $default	reduce using rule 17 (typeArg)



state 43

    typeArg  ->  USES_COPROC .   (rule 18)

    $default	reduce using rule 18 (typeArg)



state 44

    typeArg  ->  NEEDS_COPROC .   (rule 19)

    $default	reduce using rule 19 (typeArg)



state 45

    typeArg  ->  SYSTEM .   (rule 20)

    $default	reduce using rule 20 (typeArg)



state 46

    typeArg  ->  HAS_GCM .   (rule 21)

    $default	reduce using rule 21 (typeArg)



state 47

    typeArg  ->  C_API .   (rule 22)

    $default	reduce using rule 22 (typeArg)



state 48

    typeArg  ->  DISCARDABLE_DGROUP .   (rule 23)

    $default	reduce using rule 23 (typeArg)



state 49

    line  ->  TYPE typeArgs . '\n'   (rule 9)
    typeArgs  ->  typeArgs . typeArg   (rule 11)
    typeArgs  ->  typeArgs . ',' typeArg   (rule 12)

    PROCESS	shift, and go to state 38
    DRIVER	shift, and go to state 39
    LIBRARY	shift, and go to state 40
    SINGLE	shift, and go to state 41
    APPL	shift, and go to state 42
    USES_COPROC	shift, and go to state 43
    NEEDS_COPROC	shift, and go to state 44
    SYSTEM	shift, and go to state 45
    HAS_GCM	shift, and go to state 46
    C_API	shift, and go to state 47
    DISCARDABLE_DGROUP	shift, and go to state 48
    '\n'	shift, and go to state 85
    ',' 	shift, and go to state 86

    typeArg	go to state 87



state 50

    typeArgs  ->  typeArg .   (rule 10)

    $default	reduce using rule 10 (typeArgs)



state 51

    line  ->  DRIVER IDENT . '\n'   (rule 25)

    '\n'	shift, and go to state 88



state 52

    line  ->  LIBRARY IDENT . noload '\n'   (rule 33)

    NOLOAD	shift, and go to state 89

    $default	reduce using rule 43 (noload)

    noload	go to state 90



state 53

    platformFile  ->  IDENT .   (rule 36)

    $default	reduce using rule 36 (platformFile)



state 54

    line  ->  PLATFORM platformList . '\n'   (rule 26)
    platformList  ->  platformList . ',' platformFile   (rule 35)

    '\n'	shift, and go to state 91
    ',' 	shift, and go to state 92



state 55

    platformList  ->  platformFile .   (rule 34)

    $default	reduce using rule 34 (platformList)



state 56

    shipFile  ->  IDENT .   (rule 39)

    $default	reduce using rule 39 (shipFile)



state 57

    line  ->  SHIP shipList . '\n'   (rule 27)
    shipList  ->  shipList . ',' shipFile   (rule 38)

    '\n'	shift, and go to state 93
    ',' 	shift, and go to state 94



state 58

    shipList  ->  shipFile .   (rule 37)

    $default	reduce using rule 37 (shipList)



state 59

    exemptLib  ->  IDENT .   (rule 42)

    $default	reduce using rule 42 (exemptLib)



state 60

    line  ->  EXEMPT exemptList . '\n'   (rule 28)
    exemptList  ->  exemptList . ',' exemptLib   (rule 41)

    '\n'	shift, and go to state 95
    ',' 	shift, and go to state 96



state 61

    exemptList  ->  exemptLib .   (rule 40)

    $default	reduce using rule 40 (exemptList)



state 62

    line  ->  APPOBJ IDENT . '\n'   (rule 24)

    '\n'	shift, and go to state 97



state 63

    line  ->  EXPORT @1 . idList '\n'   (rule 50)

    IDENT	shift, and go to state 98

    exportid	go to state 99
    idList	go to state 100



state 64

    line  ->  SKIP NUMBER . '\n'   (rule 46)

    '\n'	shift, and go to state 101



state 65

    line  ->  SKIP UNTIL . NUMBER '\n'   (rule 47)
    line  ->  SKIP UNTIL . IDENT '\n'   (rule 48)

    IDENT	shift, and go to state 102
    NUMBER	shift, and go to state 103



state 66

    line  ->  CLASS IDENT . '\n'   (rule 56)

    '\n'	shift, and go to state 104



state 67

    line  ->  STACK NUMBER . '\n'   (rule 57)

    '\n'	shift, and go to state 105



state 68

    line  ->  HEAPSPACE KNUMBER . '\n'   (rule 59)

    '\n'	shift, and go to state 106



state 69

    line  ->  HEAPSPACE NUMBER . '\n'   (rule 58)

    '\n'	shift, and go to state 107



state 70

    resource  ->  RESOURCE IFDEF .   (rule 61)

    $default	reduce using rule 61 (resource)



state 71

    line  ->  ENTRY IDENT .   (rule 87)

    $default	reduce using rule 87 (line)



state 72

    line  ->  USERNOTES STRING .   (rule 8)

    $default	reduce using rule 8 (line)



state 73

    nameAndClass  ->  IDENT .   (rule 89)
    nameAndClass  ->  IDENT . STRING   (rule 90)

    STRING	shift, and go to state 108

    $default	reduce using rule 89 (nameAndClass)



state 74

    line  ->  LOAD nameAndClass . AS loadArgs '\n'   (rule 88)

    AS  	shift, and go to state 109



state 75

    line  ->  NOSORT '\n' .   (rule 64)

    $default	reduce using rule 64 (line)



state 76

    protominorid  ->  IDENT .   (rule 106)

    $default	reduce using rule 106 (protominorid)



state 77

    line  ->  INCMINOR protoMinorList .   (rule 103)
    protoMinorList  ->  protoMinorList . ',' protominorid   (rule 105)

    ',' 	shift, and go to state 110

    $default	reduce using rule 103 (line)



state 78

    protoMinorList  ->  protominorid .   (rule 104)

    $default	reduce using rule 104 (protoMinorList)



state 79

    line  ->  PUBLISH IDENT .   (rule 101)

    $default	reduce using rule 101 (line)



state 80

    line  ->  IFDEF IDENT .   (rule 29)

    $default	reduce using rule 29 (line)



state 81

    line  ->  IFNDEF IDENT .   (rule 30)

    $default	reduce using rule 30 (line)



state 82

    line  ->  resource IDENT . @2 resArgs '\n'   (rule 63)

    $default	reduce using rule 62 (@2)

    @2  	go to state 111



state 83

    line  ->  NAME IDENT '.' . IDENT '\n'   (rule 4)

    IDENT	shift, and go to state 112



state 84

    line  ->  TOKENID NUMBER '\n' .   (rule 6)

    $default	reduce using rule 6 (line)



state 85

    line  ->  TYPE typeArgs '\n' .   (rule 9)

    $default	reduce using rule 9 (line)



state 86

    typeArgs  ->  typeArgs ',' . typeArg   (rule 12)

    PROCESS	shift, and go to state 38
    DRIVER	shift, and go to state 39
    LIBRARY	shift, and go to state 40
    SINGLE	shift, and go to state 41
    APPL	shift, and go to state 42
    USES_COPROC	shift, and go to state 43
    NEEDS_COPROC	shift, and go to state 44
    SYSTEM	shift, and go to state 45
    HAS_GCM	shift, and go to state 46
    C_API	shift, and go to state 47
    DISCARDABLE_DGROUP	shift, and go to state 48

    typeArg	go to state 113



state 87

    typeArgs  ->  typeArgs typeArg .   (rule 11)

    $default	reduce using rule 11 (typeArgs)



state 88

    line  ->  DRIVER IDENT '\n' .   (rule 25)

    $default	reduce using rule 25 (line)



state 89

    noload  ->  NOLOAD .   (rule 44)
    noload  ->  NOLOAD . FIXED   (rule 45)

    FIXED	shift, and go to state 114

    $default	reduce using rule 44 (noload)



state 90

    line  ->  LIBRARY IDENT noload . '\n'   (rule 33)

    '\n'	shift, and go to state 115



state 91

    line  ->  PLATFORM platformList '\n' .   (rule 26)

    $default	reduce using rule 26 (line)



state 92

    platformList  ->  platformList ',' . platformFile   (rule 35)

    IDENT	shift, and go to state 53

    platformFile	go to state 116



state 93

    line  ->  SHIP shipList '\n' .   (rule 27)

    $default	reduce using rule 27 (line)



state 94

    shipList  ->  shipList ',' . shipFile   (rule 38)

    IDENT	shift, and go to state 56

    shipFile	go to state 117



state 95

    line  ->  EXEMPT exemptList '\n' .   (rule 28)

    $default	reduce using rule 28 (line)



state 96

    exemptList  ->  exemptList ',' . exemptLib   (rule 41)

    IDENT	shift, and go to state 59

    exemptLib	go to state 118



state 97

    line  ->  APPOBJ IDENT '\n' .   (rule 24)

    $default	reduce using rule 24 (line)



state 98

    exportid  ->  IDENT .   (rule 51)
    exportid  ->  IDENT . AS IDENT   (rule 52)
    exportid  ->  IDENT . IFDEF   (rule 53)

    AS  	shift, and go to state 119
    IFDEF	shift, and go to state 120

    $default	reduce using rule 51 (exportid)



state 99

    idList  ->  exportid .   (rule 54)

    $default	reduce using rule 54 (idList)



state 100

    line  ->  EXPORT @1 idList . '\n'   (rule 50)
    idList  ->  idList . ',' exportid   (rule 55)

    '\n'	shift, and go to state 121
    ',' 	shift, and go to state 122



state 101

    line  ->  SKIP NUMBER '\n' .   (rule 46)

    $default	reduce using rule 46 (line)



state 102

    line  ->  SKIP UNTIL IDENT . '\n'   (rule 48)

    '\n'	shift, and go to state 123



state 103

    line  ->  SKIP UNTIL NUMBER . '\n'   (rule 47)

    '\n'	shift, and go to state 124



state 104

    line  ->  CLASS IDENT '\n' .   (rule 56)

    $default	reduce using rule 56 (line)



state 105

    line  ->  STACK NUMBER '\n' .   (rule 57)

    $default	reduce using rule 57 (line)



state 106

    line  ->  HEAPSPACE KNUMBER '\n' .   (rule 59)

    $default	reduce using rule 59 (line)



state 107

    line  ->  HEAPSPACE NUMBER '\n' .   (rule 58)

    $default	reduce using rule 58 (line)



state 108

    nameAndClass  ->  IDENT STRING .   (rule 90)

    $default	reduce using rule 90 (nameAndClass)



state 109

    line  ->  LOAD nameAndClass AS . loadArgs '\n'   (rule 88)

    IDENT	shift, and go to state 125
    ALIGNMENT	shift, and go to state 126
    COMBINE	shift, and go to state 127
    STRING	shift, and go to state 128

    $default	reduce using rule 93 (segAttrs)

    loadArgs	go to state 129
    segAttrs	go to state 130



state 110

    protoMinorList  ->  protoMinorList ',' . protominorid   (rule 105)

    IDENT	shift, and go to state 76

    protominorid	go to state 131



state 111

    line  ->  resource IDENT @2 . resArgs '\n'   (rule 63)

    READONLY	shift, and go to state 132
    DISCARDONLY	shift, and go to state 133
    PRELOAD	shift, and go to state 134
    FIXED	shift, and go to state 135
    CONFORMING	shift, and go to state 136
    SHARED	shift, and go to state 137
    CODE	shift, and go to state 138
    DATA	shift, and go to state 139
    LMEM	shift, and go to state 140
    UIOBJECT	shift, and go to state 141
    OBJECT	shift, and go to state 142
    SWAPONLY	shift, and go to state 143
    DISCARDABLE	shift, and go to state 144
    SWAPABLE	shift, and go to state 145
    NOSWAP	shift, and go to state 146
    NODISCARD	shift, and go to state 147

    $default	reduce using rule 66 (resArgs)

    resArgs	go to state 148
    resArgList	go to state 149
    resArg	go to state 150



state 112

    line  ->  NAME IDENT '.' IDENT . '\n'   (rule 4)

    '\n'	shift, and go to state 151



state 113

    typeArgs  ->  typeArgs ',' typeArg .   (rule 12)

    $default	reduce using rule 12 (typeArgs)



state 114

    noload  ->  NOLOAD FIXED .   (rule 45)

    $default	reduce using rule 45 (noload)



state 115

    line  ->  LIBRARY IDENT noload '\n' .   (rule 33)

    $default	reduce using rule 33 (line)



state 116

    platformList  ->  platformList ',' platformFile .   (rule 35)

    $default	reduce using rule 35 (platformList)



state 117

    shipList  ->  shipList ',' shipFile .   (rule 38)

    $default	reduce using rule 38 (shipList)



state 118

    exemptList  ->  exemptList ',' exemptLib .   (rule 41)

    $default	reduce using rule 41 (exemptList)



state 119

    exportid  ->  IDENT AS . IDENT   (rule 52)

    IDENT	shift, and go to state 152



state 120

    exportid  ->  IDENT IFDEF .   (rule 53)

    $default	reduce using rule 53 (exportid)



state 121

    line  ->  EXPORT @1 idList '\n' .   (rule 50)

    $default	reduce using rule 50 (line)



state 122

    idList  ->  idList ',' . exportid   (rule 55)

    IDENT	shift, and go to state 98

    exportid	go to state 153



state 123

    line  ->  SKIP UNTIL IDENT '\n' .   (rule 48)

    $default	reduce using rule 48 (line)



state 124

    line  ->  SKIP UNTIL NUMBER '\n' .   (rule 47)

    $default	reduce using rule 47 (line)



state 125

    loadArgs  ->  IDENT . segAttrs   (rule 91)

    ALIGNMENT	shift, and go to state 126
    COMBINE	shift, and go to state 127
    STRING	shift, and go to state 128

    $default	reduce using rule 93 (segAttrs)

    segAttrs	go to state 154



state 126

    segAttrs  ->  ALIGNMENT .   (rule 94)
    segAttrs  ->  ALIGNMENT . COMBINE   (rule 97)
    segAttrs  ->  ALIGNMENT . STRING   (rule 98)
    segAttrs  ->  ALIGNMENT . COMBINE STRING   (rule 100)

    COMBINE	shift, and go to state 155
    STRING	shift, and go to state 156

    $default	reduce using rule 94 (segAttrs)



state 127

    segAttrs  ->  COMBINE .   (rule 95)
    segAttrs  ->  COMBINE . STRING   (rule 99)

    STRING	shift, and go to state 157

    $default	reduce using rule 95 (segAttrs)



state 128

    segAttrs  ->  STRING .   (rule 96)

    $default	reduce using rule 96 (segAttrs)



state 129

    line  ->  LOAD nameAndClass AS loadArgs . '\n'   (rule 88)

    '\n'	shift, and go to state 158



state 130

    loadArgs  ->  segAttrs .   (rule 92)

    $default	reduce using rule 92 (loadArgs)



state 131

    protoMinorList  ->  protoMinorList ',' protominorid .   (rule 105)

    $default	reduce using rule 105 (protoMinorList)



state 132

    resArg  ->  READONLY .   (rule 71)

    $default	reduce using rule 71 (resArg)



state 133

    resArg  ->  DISCARDONLY .   (rule 73)

    $default	reduce using rule 73 (resArg)



state 134

    resArg  ->  PRELOAD .   (rule 78)

    $default	reduce using rule 78 (resArg)



state 135

    resArg  ->  FIXED .   (rule 79)

    $default	reduce using rule 79 (resArg)



state 136

    resArg  ->  CONFORMING .   (rule 80)

    $default	reduce using rule 80 (resArg)



state 137

    resArg  ->  SHARED .   (rule 81)

    $default	reduce using rule 81 (resArg)



state 138

    resArg  ->  CODE .   (rule 82)

    $default	reduce using rule 82 (resArg)



state 139

    resArg  ->  DATA .   (rule 83)

    $default	reduce using rule 83 (resArg)



state 140

    resArg  ->  LMEM .   (rule 84)

    $default	reduce using rule 84 (resArg)



state 141

    resArg  ->  UIOBJECT .   (rule 85)

    $default	reduce using rule 85 (resArg)



state 142

    resArg  ->  OBJECT .   (rule 86)

    $default	reduce using rule 86 (resArg)



state 143

    resArg  ->  SWAPONLY .   (rule 74)

    $default	reduce using rule 74 (resArg)



state 144

    resArg  ->  DISCARDABLE .   (rule 72)

    $default	reduce using rule 72 (resArg)



state 145

    resArg  ->  SWAPABLE .   (rule 75)

    $default	reduce using rule 75 (resArg)



state 146

    resArg  ->  NOSWAP .   (rule 76)

    $default	reduce using rule 76 (resArg)



state 147

    resArg  ->  NODISCARD .   (rule 77)

    $default	reduce using rule 77 (resArg)



state 148

    line  ->  resource IDENT @2 resArgs . '\n'   (rule 63)

    '\n'	shift, and go to state 159



state 149

    resArgs  ->  resArgList .   (rule 67)
    resArgList  ->  resArgList . resArg   (rule 69)
    resArgList  ->  resArgList . ',' resArg   (rule 70)

    READONLY	shift, and go to state 132
    DISCARDONLY	shift, and go to state 133
    PRELOAD	shift, and go to state 134
    FIXED	shift, and go to state 135
    CONFORMING	shift, and go to state 136
    SHARED	shift, and go to state 137
    CODE	shift, and go to state 138
    DATA	shift, and go to state 139
    LMEM	shift, and go to state 140
    UIOBJECT	shift, and go to state 141
    OBJECT	shift, and go to state 142
    SWAPONLY	shift, and go to state 143
    DISCARDABLE	shift, and go to state 144
    SWAPABLE	shift, and go to state 145
    NOSWAP	shift, and go to state 146
    NODISCARD	shift, and go to state 147
    ',' 	shift, and go to state 160

    $default	reduce using rule 67 (resArgs)

    resArg	go to state 161



state 150

    resArgList  ->  resArg .   (rule 68)

    $default	reduce using rule 68 (resArgList)



state 151

    line  ->  NAME IDENT '.' IDENT '\n' .   (rule 4)

    $default	reduce using rule 4 (line)



state 152

    exportid  ->  IDENT AS IDENT .   (rule 52)

    $default	reduce using rule 52 (exportid)



state 153

    idList  ->  idList ',' exportid .   (rule 55)

    $default	reduce using rule 55 (idList)



state 154

    loadArgs  ->  IDENT segAttrs .   (rule 91)

    $default	reduce using rule 91 (loadArgs)



state 155

    segAttrs  ->  ALIGNMENT COMBINE .   (rule 97)
    segAttrs  ->  ALIGNMENT COMBINE . STRING   (rule 100)

    STRING	shift, and go to state 162

    $default	reduce using rule 97 (segAttrs)



state 156

    segAttrs  ->  ALIGNMENT STRING .   (rule 98)

    $default	reduce using rule 98 (segAttrs)



state 157

    segAttrs  ->  COMBINE STRING .   (rule 99)

    $default	reduce using rule 99 (segAttrs)



state 158

    line  ->  LOAD nameAndClass AS loadArgs '\n' .   (rule 88)

    $default	reduce using rule 88 (line)



state 159

    line  ->  resource IDENT @2 resArgs '\n' .   (rule 63)

    $default	reduce using rule 63 (line)



state 160

    resArgList  ->  resArgList ',' . resArg   (rule 70)

    READONLY	shift, and go to state 132
    DISCARDONLY	shift, and go to state 133
    PRELOAD	shift, and go to state 134
    FIXED	shift, and go to state 135
    CONFORMING	shift, and go to state 136
    SHARED	shift, and go to state 137
    CODE	shift, and go to state 138
    DATA	shift, and go to state 139
    LMEM	shift, and go to state 140
    UIOBJECT	shift, and go to state 141
    OBJECT	shift, and go to state 142
    SWAPONLY	shift, and go to state 143
    DISCARDABLE	shift, and go to state 144
    SWAPABLE	shift, and go to state 145
    NOSWAP	shift, and go to state 146
    NODISCARD	shift, and go to state 147

    resArg	go to state 163



state 161

    resArgList  ->  resArgList resArg .   (rule 69)

    $default	reduce using rule 69 (resArgList)



state 162

    segAttrs  ->  ALIGNMENT COMBINE STRING .   (rule 100)

    $default	reduce using rule 100 (segAttrs)



state 163

    resArgList  ->  resArgList ',' resArg .   (rule 70)

    $default	reduce using rule 70 (resArgList)



state 164

    $   	go to state 165



state 165

    $default	accept
